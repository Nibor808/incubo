<main class="node">
  <div class="col-xs-12 col-sm-2">
    <p>Node JS</p>
  </div>
  <div class="col-xs-12 col-sm-9 col-sm-offset-1">
    <p>
      Node JS is a JavaScript runtime built on Google Chrome's V8 engine and uses a non-blocking event-driven I/O model that makes it lightweight and efficient. It also utilizes npm (Node Package Manager), the largest ecosystem of open source libraries in the world.
    </p>
    <p>
      Node allows us to write consistent code throughout projects using Javascript for both the frontend (browser), and backend (server) providing seamless integration. Node is also asynchronus, allowing processes to run without holding up others through the use of an event loop. Processes are pushed on to the loop and executed in turn. Through the use of Promises we can allow the code to continue executing and the result will be availiable to us once it's finished. This used to be handled by callback functions that would "do something" once the code was finished. This however lead to "callback hell" and highly unreadable code.
    </p>
    <p>
      Node ships with roughly 20 or so core modules that allow for http, tcp/ip and file access, timers and a host of other things to make your life easier. The package manager (npm) contains over 30,000 community written modules to add additional functionality to projects without the developer having to re-invent the wheel. While this can be very handy, the drawback is that due to the relative ease of use of Javascript, the entry parameters for writing modules is fairly low. This leads to variable quality in modules. There can be dozens of modules available to you to accomplish any given task. Choosing the "best" one can be difficult. It is only through research and sometimes trial and error that you can find the one that best suits your needs.
    </p>
    <p>
      We find Node to be very useful for small - medium size web apps. While Elixir/Phoenix and Golang/Beego are very promising when high concurrency is necessary, the popularity of Javascript means that Node JS will be around for a long time to come.
    </p>
  </div>
</main>